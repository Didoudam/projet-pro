
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  firstName: 'firstName',
  lastName: 'lastName',
  isRoot: 'isRoot',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  activity: 'activity',
  image: 'image',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.WriterScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId'
};

exports.Prisma.FormationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  description: 'description',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.ExperienceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  description: 'description',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  content: 'content',
  reactionId: 'reactionId',
  writerId: 'writerId'
};

exports.Prisma.VoteScalarFieldEnum = {
  id: 'id',
  writerId: 'writerId',
  postId: 'postId'
};

exports.Prisma.MediaScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  url: 'url',
  altText: 'altText',
  description: 'description',
  type: 'type',
  postId: 'postId'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  votes: 'votes',
  postId: 'postId',
  commentId: 'commentId',
  writerId: 'writerId'
};

exports.Prisma.CompanyAdminScalarFieldEnum = {
  id: 'id',
  role: 'role',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  level: 'level',
  userId: 'userId'
};

exports.Prisma.RelationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  status: 'status',
  userId: 'userId',
  relationId: 'relationId'
};

exports.Prisma.ProfileShowScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  idUser1: 'idUser1',
  idUser2: 'idUser2'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  espiresAt: 'espiresAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  accessTokenExpireAt: 'accessTokenExpireAt',
  refreshTokenExpireAt: 'refreshTokenExpireAt',
  scope: 'scope',
  idToken: 'idToken',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  image: 'image',
  firstName: 'firstName',
  lastName: 'lastName'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  activity: 'activity',
  image: 'image',
  description: 'description'
};

exports.Prisma.WriterOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId'
};

exports.Prisma.formationOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.ExperienceOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content',
  reactionId: 'reactionId',
  writerId: 'writerId'
};

exports.Prisma.VoteOrderByRelevanceFieldEnum = {
  id: 'id',
  writerId: 'writerId',
  postId: 'postId'
};

exports.Prisma.MediaOrderByRelevanceFieldEnum = {
  id: 'id',
  nom: 'nom',
  url: 'url',
  altText: 'altText',
  description: 'description',
  type: 'type',
  postId: 'postId'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content',
  postId: 'postId',
  commentId: 'commentId',
  writerId: 'writerId'
};

exports.Prisma.CompanyAdminOrderByRelevanceFieldEnum = {
  id: 'id',
  role: 'role',
  companyId: 'companyId',
  userId: 'userId'
};

exports.Prisma.SkillOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId'
};

exports.Prisma.RelationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  relationId: 'relationId'
};

exports.Prisma.ProfileShowOrderByRelevanceFieldEnum = {
  id: 'id',
  idUser1: 'idUser1',
  idUser2: 'idUser2'
};

exports.Prisma.SessionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  scope: 'scope',
  idToken: 'idToken',
  password: 'password'
};

exports.Prisma.VerificationOrderByRelevanceFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value'
};


exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Writer: 'Writer',
  formation: 'formation',
  Experience: 'Experience',
  Post: 'Post',
  Vote: 'Vote',
  Media: 'Media',
  Comment: 'Comment',
  CompanyAdmin: 'CompanyAdmin',
  Skill: 'Skill',
  Relation: 'Relation',
  ProfileShow: 'ProfileShow',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "F:\\github\\projet-pro\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "F:\\github\\projet-pro\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            String   @id @default(cuid())\n  name          String\n  email         String   @unique\n  emailVerified Boolean\n  image         String?\n  firstName     String?\n  lastName      String?\n  isRoot        Boolean?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  session   Session[]\n  account   Account[]\n  relations Relation[] @relation(\"user-relations\")\n  relatedBy Relation[] @relation(\"relation\")\n\n  ProfileShowAsUser1 ProfileShow[]  @relation(\"UserAsUser1\")\n  ProfileShowAsUser2 ProfileShow[]  @relation(\"UserAsUser2\")\n  skill              Skill[]\n  companyAdmin       CompanyAdmin[]\n  formation          formation[]\n  Experience         Experience[]\n  Writer             Writer[]\n}\n\nmodel Company {\n  id          String   @id @default(cuid())\n  name        String\n  activity    String?\n  image       String?\n  description String?\n  createdAt   DateTime @default(now())\n\n  companyAdmin CompanyAdmin[]\n  formation    formation[]\n  Experience   Experience[]\n  Writer       Writer[]\n}\n\nmodel Writer {\n  id        String  @id @default(cuid())\n  userId    String?\n  companyId String?\n\n  user    User?     @relation(fields: [userId], references: [id])\n  company Company?  @relation(fields: [companyId], references: [id])\n  Post    Post[]\n  Vote    Vote[]\n  Comment Comment[]\n}\n\nmodel formation {\n  id          String    @id @default(cuid())\n  name        String\n  startDate   DateTime\n  endDate     DateTime?\n  description String?\n  companyId   String?\n  userId      String\n  company     Company?  @relation(fields: [companyId], references: [id])\n  user        User      @relation(fields: [userId], references: [id])\n}\n\nmodel Experience {\n  id          String    @id @default(cuid())\n  name        String\n  startDate   DateTime\n  endDate     DateTime?\n  description String?\n  companyId   String?\n  userId      String\n  company     Company?  @relation(fields: [companyId], references: [id])\n  user        User      @relation(fields: [userId], references: [id])\n}\n\nmodel Post {\n  id         String   @id @default(cuid())\n  createdAt  DateTime @default(now())\n  content    String\n  reactionId String?\n  writerId   String\n  writer     Writer   @relation(fields: [writerId], references: [id])\n\n  media   Media[]\n  Comment Comment[]\n  Vote    Vote[]\n}\n\nmodel Vote {\n  id       String @id @default(cuid())\n  writerId String\n  postId   String\n\n  writer Writer @relation(fields: [writerId], references: [id])\n  post   Post?  @relation(fields: [postId], references: [id])\n}\n\nmodel Media {\n  id          String  @id @default(cuid())\n  nom         String?\n  url         String\n  altText     String?\n  description String?\n  type        String?\n  postId      String\n  post        Post    @relation(fields: [postId], references: [id])\n}\n\nmodel Comment {\n  id        String   @id @default(cuid())\n  content   String\n  createdAt DateTime @default(now())\n  votes     Int?     @default(0)\n  postId    String?\n  commentId String?\n  writerId  String\n  writer    Writer   @relation(fields: [writerId], references: [id])\n  post      Post?    @relation(fields: [postId], references: [id])\n  comment   Comment? @relation(\"CommentAsParentComment\", fields: [commentId], references: [id])\n\n  replies Comment[] @relation(\"CommentAsParentComment\")\n}\n\nmodel CompanyAdmin {\n  id        String  @id @default(cuid())\n  role      String\n  companyId String\n  userId    String\n  company   Company @relation(fields: [companyId], references: [id])\n  user      User    @relation(fields: [userId], references: [id])\n}\n\nmodel Skill {\n  id     String @id @default(cuid())\n  name   String\n  level  Int\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Relation {\n  id         String   @id @default(cuid())\n  createdAt  DateTime @default(now())\n  status     Boolean\n  userId     String\n  relationId String\n  user       User     @relation(\"user-relations\", fields: [userId], references: [id], onDelete: Cascade)\n  relation   User     @relation(\"relation\", fields: [relationId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, relationId])\n}\n\n//vue sur les profils (qui a vu mon profil)\nmodel ProfileShow {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  idUser1   String\n  idUser2   String\n  user1     User     @relation(\"UserAsUser1\", fields: [idUser1], references: [id], onDelete: Cascade)\n  user2     User     @relation(\"UserAsUser2\", fields: [idUser2], references: [id], onDelete: Cascade)\n}\n\nmodel Session {\n  id        String   @id @default(cuid())\n  userId    String\n  token     String\n  espiresAt DateTime\n  ipAddress String?\n  userAgent String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Account {\n  id                   String    @id @default(cuid())\n  userId               String\n  accountId            String\n  providerId           String\n  accessToken          String?\n  refreshToken         String?\n  accessTokenExpireAt  DateTime?\n  refreshTokenExpireAt DateTime?\n  scope                String?\n  idToken              String?\n  password             String?\n  createdAt            DateTime  @default(now())\n  updatedAt            DateTime  @updatedAt\n  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Verification {\n  id         String   @id @default(cuid())\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime\n  updatedAt  DateTime\n}\n",
  "inlineSchemaHash": "71be56da6ddaa7edabac758b9c401b3827806b8d74ef2fc3fecbc2b0f8ff46c6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRoot\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"relations\",\"kind\":\"object\",\"type\":\"Relation\",\"relationName\":\"user-relations\"},{\"name\":\"relatedBy\",\"kind\":\"object\",\"type\":\"Relation\",\"relationName\":\"relation\"},{\"name\":\"ProfileShowAsUser1\",\"kind\":\"object\",\"type\":\"ProfileShow\",\"relationName\":\"UserAsUser1\"},{\"name\":\"ProfileShowAsUser2\",\"kind\":\"object\",\"type\":\"ProfileShow\",\"relationName\":\"UserAsUser2\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUser\"},{\"name\":\"companyAdmin\",\"kind\":\"object\",\"type\":\"CompanyAdmin\",\"relationName\":\"CompanyAdminToUser\"},{\"name\":\"formation\",\"kind\":\"object\",\"type\":\"formation\",\"relationName\":\"UserToformation\"},{\"name\":\"Experience\",\"kind\":\"object\",\"type\":\"Experience\",\"relationName\":\"ExperienceToUser\"},{\"name\":\"Writer\",\"kind\":\"object\",\"type\":\"Writer\",\"relationName\":\"UserToWriter\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyAdmin\",\"kind\":\"object\",\"type\":\"CompanyAdmin\",\"relationName\":\"CompanyToCompanyAdmin\"},{\"name\":\"formation\",\"kind\":\"object\",\"type\":\"formation\",\"relationName\":\"CompanyToformation\"},{\"name\":\"Experience\",\"kind\":\"object\",\"type\":\"Experience\",\"relationName\":\"CompanyToExperience\"},{\"name\":\"Writer\",\"kind\":\"object\",\"type\":\"Writer\",\"relationName\":\"CompanyToWriter\"}],\"dbName\":null},\"Writer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWriter\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToWriter\"},{\"name\":\"Post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToWriter\"},{\"name\":\"Vote\",\"kind\":\"object\",\"type\":\"Vote\",\"relationName\":\"VoteToWriter\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToWriter\"}],\"dbName\":null},\"formation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToformation\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToformation\"}],\"dbName\":null},\"Experience\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToExperience\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExperienceToUser\"}],\"dbName\":null},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writer\",\"kind\":\"object\",\"type\":\"Writer\",\"relationName\":\"PostToWriter\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToPost\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToPost\"},{\"name\":\"Vote\",\"kind\":\"object\",\"type\":\"Vote\",\"relationName\":\"PostToVote\"}],\"dbName\":null},\"Vote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writer\",\"kind\":\"object\",\"type\":\"Writer\",\"relationName\":\"VoteToWriter\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToVote\"}],\"dbName\":null},\"Media\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"MediaToPost\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"votes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"writer\",\"kind\":\"object\",\"type\":\"Writer\",\"relationName\":\"CommentToWriter\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"CommentToPost\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentAsParentComment\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentAsParentComment\"}],\"dbName\":null},\"CompanyAdmin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanyAdmin\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyAdminToUser\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillToUser\"}],\"dbName\":null},\"Relation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"user-relations\"},{\"name\":\"relation\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"relation\"}],\"dbName\":null},\"ProfileShow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"idUser1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idUser2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user1\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAsUser1\"},{\"name\":\"user2\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAsUser2\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"espiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpireAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpireAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

